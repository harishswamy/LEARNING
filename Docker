Difference b/w virtualization and containerization or virtual machines and docker containers . 
    https://www.youtube.com/watch?v=TvnZTi_gaNc&list=PLRuwWI9yNNDjykbuoOwtem9DX-0g4iLv8&index=20

Docker full video 
    https://www.youtube.com/watch?v=RppfZGuLsmA&list=PLRuwWI9yNNDghAMabT6-0YIRehURS1aJS&index=2&t=6744s

Docker base commands
    https://docs.docker.com/engine/reference/commandline/docker/

Docker commands: 
docker --version 

docker images 

docker pull <image_name>

docker run -it --name <container_name> <image_name>
    options: --interactive , -i		Keep STDIN open even if not attached
             --tty , -t		Allocate a pseudo-TTY
             --detach , -d		Run container in background and print container ID
             --hostname , -h		Container host name
             --name		Assign a name to the container
             --env , -e		Set environment variables
             --env-file		Read in a file of environment variables
             --expose		Expose a port or a range of ports
             --hostname , -h		Container host name
             --ip		IPv4 address (e.g., 172.30.100.104)
             --memory , -m		Memory limit
             --net		Connect a container to a network
             --rm		Automatically remove the container when it exits
             --runtime		Runtime to use for this container
             --volume , -v		Bind mount a volume
             --volumes-from		Mount volumes from the specified container(s)
             --workdir , -w		Working directory inside the container

#
creates an interactive container with a pseudo-TTY attached, then starts the container and attaches to it, 
docker container create -i -t --name mycontainer alpine
docker container start --attach -i mycontainer 
# NOTE: The above is the equivalent of a docker run 
docker run -it -d --name <container_name> <image_name>

docker stop <container_name> - To stop container 

docker start <container_name> - To start container

docker container stop <container_id> - To stop container

docker container start <container_id> - To start container

docker exec -it <container_name> bash - to login/ connect to container 

docker exec -it <container_name> ls -  execute command in container without login.  

docker exec -it -e var=1(variable_name=variable_value) <container_name> bash - set an environment variable in the current bash sessio

docker exec -it -w /root <container_name> pwd - You can select working directory for the command to execute into

docker pause <container_name> - Pause all processes within one or more containers

docker unpause <container_name> - Unpause all processes within one or more containers

TASK : what is the diff b/w pause/kill/stop container. 

docker restart <container_name> - to restart container , it may useful to restart any service like nginx. 

dokcer build -t <repository_name>:<tag_name> <path of Dockerifle>

docker images -q - to print only docker images id's 
docker rmi $(docker images -f "dangling=true" -q) - to remove all dangling images , which images doesn't have repository name and tag name those are called as dangling iamges. 
docker rmi $(docker images -q ) - to remove all images 
docker images <repository_name> - print images which are matched with mentioned repository name
docker iamges <repository_name>:<tag> - print images which are matched with mentioned repository name and tag name 
docker images --no-trunc - to print full imageid 
docker images --filter "before=<repository_name>" - to print images which created before mentioned image
docker images --filter "since=<repository_name>" - to print images which created after mentioned image
docker images --filter=reference='busy*:*libc' - print images based on reference regular expression
docker images --format "table {{.ID}}\t{{.Repository}}\t{{.Tag}}" - print image info by specfic format
docker images --format "table {{.ID}}:{{.Repository}}:{{.Tag}}"

